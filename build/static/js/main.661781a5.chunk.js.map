{"version":3,"sources":["serviceWorker.js","Util/API.js","Components/Nav.js","Components/Header.js","Components/General/Banner.js","Components/General/Cardgallery.js","Components/General/Textarea.js","Components/Page.js","Components/General/Widecard.js","index.js"],"names":["Boolean","window","location","hostname","match","axios","require","API","Promise","resolve","get","cms_url","then","resp","data","uid","Nav","props","state","active","this","items","map","item","index","href","url","className","key","label","elements","getItemElements","React","Component","Header","navActive","navItems","initNavItems","self","getNavLinks","setState","color","onClick","General_Banner","Container","fluid","style","Darken","background","Image","Col","Row","Heading","Subheading","CTA_Label","Button","CTA_URL","target","CTA_Newtab","Arrow","icon","faChevronDown","size","General_Cardgallery","colWidth","Columns","Cardsingle","card","Card","Img","src","Body","Title","Text","dangerouslySetInnerHTML","__html","marked","General_Textarea","Size","Align","Content","componentsByName","Image_Position","Page","components","undefined","Components","component","__component","replace","toLowerCase","split","s","charAt","toUpperCase","substring","join","ReactComponent","pageData","api","pageUid","pathname","substr","getPage","ReactDOM","render","StrictMode","Helmet","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.661781a5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const axios = require('axios');\r\n\r\nclass API {\r\n    getNavLinks() {\r\n        return new Promise(function(resolve) {\r\n            axios.get(window.cms_url + '/nav-links').then(resp => {\r\n                resolve(resp.data);\r\n            });\r\n        });\r\n    }\r\n\r\n    getPage(uid) {\r\n        return new Promise(function(resolve) {\r\n            uid = uid === '' || uid === '/' ? '' : uid;\r\n            axios.get(window.cms_url + '/pages?UID=' + uid).then(resp => {\r\n                resolve(resp.data[0]);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default API","import React from 'react';\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        }\r\n    }\r\n\r\n    getItemElements() {\r\n        return (\r\n            <>\r\n                {this.props.items.map(function(item, index) {\r\n                    return (\r\n                        <a href={item.url || '/'} className=\"fpsNavItem\" key={index}>\r\n                            <div className=\"fpsNavItem-textContainer center-vertical\">\r\n                                <div className=\"fpsNavItem-text center-vertical\">{item.label}</div>\r\n                            </div>\r\n                        </a> \r\n                    )\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let elements = this.getItemElements();\r\n        return (\r\n            <>\r\n                {/* desktop */}\r\n                <div className={'fpsNav fpsNav-desktop' + (this.props.active ? ' active' : '')}>\r\n                    {elements}\r\n                </div>\r\n\r\n                {/* mobile */}\r\n                <div className={'fpsNav fpsNav-mobile' + (this.props.active ? ' active' : '')}>\r\n                    {elements}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav","import React from 'react';\r\nimport { Slider } from 'react-burgers';\r\nimport Nav from './Nav';\r\nimport API from '../Util/API';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navActive: false,\r\n            navItems: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initNavItems();\r\n    }\r\n\r\n    initNavItems() {\r\n        let self = this;\r\n        let api = new API();\r\n        let navItemsReq = api.getNavLinks();\r\n        navItemsReq.then(function(items) {\r\n            self.setState({navItems: items});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Nav items={this.state.navItems} active={this.state.navActive} />\r\n\r\n                <div className='fpsHeader'>\r\n                    <Slider\r\n                    className=\"float-right\"\r\n                    color=\"#fff\"\r\n                    active={this.state.navActive}\r\n                    onClick={() => {this.setState({navActive: !this.state.navActive})}}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\n\r\nclass General_Banner extends React.Component {\r\n    render() {\r\n        let data = this.props.data;\r\n        return (\r\n            <Container \r\n                className=\"banner text-center text-white\"\r\n                fluid\r\n                style={\r\n                    data.Darken ?\r\n                    {background: 'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(' + window.cms_url + data.Image.url + ') no-repeat center center fixed'} :\r\n                    {background: 'url(\"' + window.cms_url + data.Image.url + '\")'}\r\n                }\r\n            >\r\n                <Col className=\"center-vertical\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h1>{data.Heading}</h1>\r\n                            <h4>{data.Subheading || ''}</h4>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {data.CTA_Label !== null && \r\n                        <Row className=\"my-4\">\r\n                            <Col>\r\n                                <Button \r\n                                    href={data.CTA_URL || ''}\r\n                                    target={data.CTA_Newtab ? '_blank' : ''}\r\n                                >\r\n                                    {data.CTA_Label}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Col>\r\n\r\n                {data.Arrow && \r\n                    <FontAwesomeIcon className=\"bannerArrow\" icon={faChevronDown} size=\"4x\" />\r\n                }\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default General_Banner","import React from 'react';\r\nimport marked from 'marked';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\nclass General_Cardgallery extends React.Component {\r\n    render() {\r\n        let data = this.props.data;\r\n        let colWidth = 12 / data.Columns;\r\n\r\n        return (\r\n            <Container className=\"my-5\">\r\n                <Row>\r\n                    {\r\n                        data.Cardsingle.map(function(card, index) {\r\n                            return (\r\n                                <Col key={index} className={'mb-5 col-12 col-md-' + colWidth}>\r\n                                    <Card>\r\n                                        <Card.Img src={window.cms_url + card.Img.url} />\r\n                                        <Card.Body>\r\n                                            <Card.Title>{card.Heading}</Card.Title>\r\n                                            <Card.Text dangerouslySetInnerHTML={\r\n                                            {__html: marked(card.Text)}\r\n                                            }>\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default General_Cardgallery","import React from 'react';\r\nimport marked from 'marked';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nclass General_Textarea extends React.Component {\r\n    render() {\r\n        let data = this.props.data;\r\n        return (\r\n            <Container \r\n            fluid={data.Size === 'full_width'}\r\n            className={'py-5 my-5 text-' + (data.Align !== null ? data.Align : 'left')}\r\n            >\r\n                <Row>\r\n                    <Col>\r\n                        <div dangerouslySetInnerHTML={{__html: marked(data.Content)}}></div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default General_Textarea","import React from 'react';\r\nimport Header from './Header';\r\n\r\nimport General_Banner from './General/Banner';\r\nimport General_Cardgallery from './General/Cardgallery';\r\nimport General_Textarea from './General/Textarea';\r\nimport General_Widecard from './General/Widecard';\r\n\r\nconst componentsByName = {\r\n    'General_Banner': General_Banner,\r\n    'General_Cardgallery': General_Cardgallery,\r\n    'General_Textarea': General_Textarea,\r\n    'General_Widecard': General_Widecard\r\n}\r\n\r\nclass Page extends React.Component {\r\n    render() {\r\n        let self = this;\r\n        let components = self.props.data.Components !== undefined ? self.props.data.Components : [];\r\n\r\n        return (\r\n            <>\r\n                <Header />\r\n\r\n                <>\r\n                    {components.map(function(component, index) {\r\n                        // Convert path from CMS to class name, ex: foo.bar => Foo_Bar\r\n                        var className = component.__component.replace(/\\./g, ' ');\r\n                        className = className.toLowerCase()\r\n                            .split(' ')\r\n                            .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n                            .join('_');\r\n\r\n                        let ReactComponent = componentsByName[className];\r\n\r\n                        return (\r\n                            <ReactComponent data={component} key={index} />\r\n                        )\r\n                    })}\r\n                </>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page","import React from 'react';\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\n\r\nclass General_Widecard extends React.Component {\r\n    render() {\r\n        let data = this.props.data;\r\n        \r\n        return (\r\n            <Container className=\"my-5\">\r\n                <Row>\r\n                    {data.Image_Position !== 'right' && \r\n                        <Col className=\"col-12 col-sm-4\">\r\n                            <Image fluid src={window.cms_url + data.Image.url} />\r\n                        </Col>\r\n                    }\r\n\r\n                    <Col className=\"col-12 col-sm-8 my-4\">\r\n                        <div className=\"center-vertical\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <h1>{data.Title}</h1>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>{data.Text}</Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    {data.Image_Position === 'right' && \r\n                        <Col className=\"col-12 col-sm-4\">\r\n                            <Image fluid src={window.cms_url + data.Image.url} />\r\n                        </Col>\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default General_Widecard","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.scss';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport API from './Util/API';\r\nimport Page from './Components/Page';\r\n\r\n// Config\r\nwindow.cms_url = 'http://146.148.41.238:81';\r\n\r\n// Get requested page data\r\nlet pageData = new Promise(function(resolve) {\r\n  let api = new API();\r\n  let pageUid = window.location.pathname.substr(1);\r\n\r\n  api.getPage(pageUid).then(function(data) {\r\n    if (data !== undefined) {\r\n      resolve(data);\r\n    }\r\n\r\n    pageData = api.getPage('404').then(function(data) {\r\n      resolve(data);\r\n    });\r\n  });\r\n});\r\n\r\n// Output page\r\npageData.then(function(data) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Helmet>\r\n        <title>{data.Title}</title>\r\n      </Helmet>\r\n\r\n      <Page data={data} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n});\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}